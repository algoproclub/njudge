{"scoring":"\\begin{center}\r\n$\r\n\\begin{array}{|c|c|c|} \r\n    \\hline \\text{Subtask} & \\text{Points} & \\text{Constraints}  \\\\\r\n    \\hline 1 & 0 & \\text{sample}\\\\\r\n    \\hline 2 & 12 & N \\leq 50 \\: \\text{and} \\: h_i \\leq 50 \\: \\text{and} \\: w_i = 1 \\: \\text{for all} \\: i \\\\\r\n    \\hline 3 & 13 & h_i = 1 \\: \\text{or} \\: h_i = 2 \\: \\text{for all} \\: i \\\\\r\n    \\hline 4 & 15 & \\text{all} \\: h_i \\: \\text{are equal} \\\\\r\n    \\hline 5 & 15 & h_i \\leq h_{i+1} \\: \\text{for all} \\: i \\leq N-1 \\\\\r\n    \\hline 6 & 18 & N \\leq 1000\\\\\r\n    \\hline 7 & 27 & \\text{no additional constraints}\\\\\r\n    \\hline\r\n\\end{array}\r\n$\r\n\r\n\\end{center}\r\n","notes":"The fence looks like this:\\\\\r\n\\includegraphics[height=5cm]{pic1.png}\r\n\r\nThere are 5 fancy rectangles of shape:\\\\\r\n\\includegraphics[height=1.3cm]{pic2.png}\r\n\r\nThere are 3 fancy rectangles of shape:\\\\\r\n\\includegraphics[height=1.3cm]{pic3.png}\r\n\r\nThere is 1 fancy rectangle of shape:\\\\\r\n\\includegraphics[height=1.3cm]{pic4.png}\r\n\r\nThere are 2 fancy rectangles of shape:\\\\\r\n\\includegraphics[height=2cm]{pic5.png}\r\n\r\nThere is 1 fancy rectangle of shape:\\\\\r\n\\includegraphics[height=2cm]{pic6.png}","legend":"Everybody knows that Balázs has the fanciest fence in the whole town. It's built up from $N$ fancy sections. The sections are rectangles standing closely next to each other on the ground.\r\nThe $i$th section has integer height $h_i$ and integer width $w_i$.\\\\\r\nWe are looking for fancy rectangles on this fancy fence.\\\\\r\nA rectangle is fancy if:\r\n\\begin{itemize}\r\n\\item its sides are either horizontal or vertical and have integer lengths\r\n\\item the distance between the rectangle and the ground is integer\r\n\\item the distance between the rectangle and the left side of the first section is integer\r\n\\item it's lying completely on sections\r\n\\end{itemize}\r\nWhat is the number of fancy rectangles?\\\\\r\nThis number can be very big, so we are interested in it modulo $10^9+7$.","authorLogin":"noszaly.aron","language":"english","timeLimit":1000,"output":"You should print a single integer, the number of fancy rectangles modulo $10^9+7$. So the output range is $0,1,2,\\ldots, 10^9+6$.","inputFile":"stdin","outputFile":"stdout","input":"The first line contains $N$ ($1\\leq N \\leq 10^{5}$) -- the number of sections.\\\\\r\nThe second line contains $N$ space-separated integers, the $i$th number is $h_i$ ($1 \\leq h_i \\leq 10^{9}$).\\\\\r\nThe third line contains $N$ space-separated integers, the $i$th number is $w_i$ ($1 \\leq w_i \\leq 10^{9}$).","authorName":"Áron Noszály","sampleTests":[{"output":"12\r\n","input":"2\r\n1 2\r\n1 2\r\n","inputFile":"example.01","outputFile":"example.01.a"}],"name":"Fancy Fence","interaction":null,"memoryLimit":268435456,"tutorial":"\\subsection{\\textbf{Subtask 2}}\r\n\r\n$N, h_i \\leq 50, w_i = 1$\\\\\r\n\r\nThere are at most $50^4$ different rectangles.\\\\\r\nFor all of them, we can check if they are fancy or not. This can be done in constant time with some precomputation.\r\n\r\n\\subsection{\\textbf{Subtask 3}}\r\n\r\n$h_i = 1$ or $h_i = 2$ for all $i$.\\\\\r\n\r\nConsider a rectangle with height $1$ and width $K$.\\\\\r\nLemma: There are $\\binom{K+1}{2}$ fancy rectangles in it. \\\\\r\nProof: There are $K-p+1$ fancy rectangles with width $p$:\r\n$$\\sum_{p=1}^{K} (K-p+1) = \\binom{K+1}{2}$$\r\n\r\nNow we can solve subtask 3:\r\nThere are 2 types of fancy rectangles, the ones with height $1$, and the ones with height $2$.\r\n\r\nWe can easily calculate the answer, applying the previous lemma in $O(N)$ time.\r\n\r\n\\subsection{\\textbf{A helpful observation}}\r\n\r\nConsider a rectangle with height $A$ and width $B$.\\\\\r\nLet's denote the number of fancy rectangles contained within this big rectangle by $T_{A,B}$. Now we have\\\\\r\n$$T_{A,B} = \\binom{A+1}{2} \\cdot \\binom{B+1}{2}$$\r\nProof:\\\\\r\nWe can chose $\\binom{A+1}{2}$ different horizontal lines to form the horizontal side of a fancy rectangle. The same holds  for the vertical side.\r\n\r\nNote that $\\binom{X}{2} = \\dfrac{X(X-1)}{2}$, where $X(X-1)$ is always divisible by 2.\r\n\r\n\\subsection{\\textbf{Subtask 4}}\r\n\r\nThe solution follows easily from the previous lemma.\r\n\r\nThis subtask can be solved in $O(N)$ time.\r\n\r\n\\subsection{\\textbf{Subtask 5}}\r\n\r\nThe heights are in increasing order.\\\\\r\n\r\nLet $W_i$ be the sum of section widths from the $i$th to the $N$th section.\\\\\r\nThe answer is given by the formula:\r\n$$\\sum_{i=1}^{N} T_{h_i,W_i} - T_{h_{i-1},W_i},$$\r\nwhere $h_0 = 0$.\r\n\r\nThis way, the subtask can be solved in $O(N)$ time.\r\n\r\n\\subsection{\\textbf{Subtask 6}}\r\n\r\n$N \\leq 1000$\\\\\r\n\r\nFor all $1 \\leq i \\leq j \\leq N$, we calculate the number of fancy rectangles whose left side is part of the $i$th section and right side is part of the $j$th section.\\\\\r\nLet $H$ be the minimum of section heights from the $i$th to the $j$th section.\\\\\r\nLet $W$ be the sum of section widths from the $i$th to the $j$th section.\\\\\r\nThe number of fancy rectangles is (if $i \\ne j$):\r\n$$T_{H,W} - T_{H,W-w_i} - T_{H,W-w_j} + T_{H,W-w_i-w_j},$$\r\nwhich can be precomputed for all $H$.\r\n\r\nThis subtask can be solved in $O(N^2)$.\r\n\r\n\\subsection{\\textbf{Subtask 7}}\r\n\r\nOriginal constraints.\r\n\r\n\\subsubsection{\\textbf{Sorting}}\r\n\r\nLet's sort the sections in decreasing order according to their heights.\r\n\r\nLet us denote the original index of the $i$ section by $p_i$.\r\nIn the $i$th step, we calculate the number of fancy rectangles lying exclusively on the first $i$ sections.\r\n\r\nLet $x$ be the smallest index for which the $x$th, $x+1$th ... $p_i-1$th sections preceed the $p_i$th section.\\\\\r\nLet $y$ be the biggest index for which the $p_i+1$th, $p_i+2$th ... $y$th sections succeed the $p_i$th section.\\\\\r\nWrite\r\n$$X_i = \\sum_{j=x}^{p_i-1} w_j, \\qquad Y_i = \\sum_{j=p_i+1}^{y} w_j.$$\r\nIn the $i$th step, the answer increases by\r\n$T_{h_{p_i}, X_i+Y_i+w_{p_i}}-T_{h_{p_i},X_i}-T_{h_{p_i},Y_i}$.\r\nTo calculate values $X_i$ and $Y_i$ efficiently, we have to combine consecutive intervals (e.g. using DSU or similar, more simple methods).\r\nAt the start, there are $N$ intervals, each one consists of exactly one section. In the $i$th step, we shall combine the sections from the $x$th to the $y$th. For all intervals, the sum of widths of sections contained by the interval has to be stored as well.\r\n\r\nThis subtask can be solved in $O(NlogN)$ time.\r\n\r\n\\subsubsection{\\textbf{Linear}}\r\n\r\nLet's iterate through the sectionss from left to right maintaining a stack of sections with the following property: from bottom to top the height of sections are increasing and after the $i$th section is processed every fancy rectangle not present in the stack is already counted.\r\n\r\nWhen at the $i$th section three cases are possible, let the top of the stack contain a section with dimensions $H\\times W$: \r\n\\begin{itemize}\r\n\\item if $h_i=H$ we can easily modify $W$ and increase it by $w_i$ not hurting the invariant described above\r\n\\item if $h_i>H$ we can just push a $h_i \\times w_i$ rectangle to the top of the stack\r\n\\item if $h_i<H$ then we have to pop some elements from the stack until $h_i$ will be greater or equal to the height of the section on the top of the stack. While doing the popping we accumulate the width of the new top element (i.e. the sum of widths of all elements popped plus $w_i$) and also with a similar strategy to subtask 5 the number of fancy rectangles that will not be present in the stack should be calculated.\r\n\\end{itemize}\r\nAfter processing every section we can use the solution to subtask 5 to count the remaining fancy rectangles or even better just create a $0 \\times 0$ dummy section after the ones in the input.\r\n\r\nOverall the time complexity of this solution is $O(N)$ since every rectangle is pushed and popped exactly once while doing a constant amount of operations.\r\n\r\n"}